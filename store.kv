<Store>:
    size_hint: .8, .8
    auto_dismiss: False
    background: 'images/shop/shop_background.png'
    crystal: 0
    crystal_fragments: 0
    BoxLayout:
        padding: 15
        spacing: 15
        orientation: 'vertical'
        BoxLayout:
            spacing: 15
            size_hint_y: .06
            ShopBox:
                Label:
                    text: str(root.crystal)
                    color: (0, 0, 0, 1)
            ShopBox:
                Label:
                    text: str(root.crystal_fragments)
                    color: (0, 0, 0, 1)
        BoxLayout:
            size_hint_y: .3
            BoxLayout:
                spacing: 15
                BoxLayout:
                    spacing: 15
                    size_hint_x: .7
                    orientation: 'vertical'
                    ShopBox:
                        Button:
                            background_normal: 'images/shop/exchange.png'
                            background_down: 'images/shop/exchange.png'
                            on_press: root.give_crystal_fragments_test()
                        Label:
                            id: exchange
                            text: 'exchange'
                            color: (0, 0, 0, 1)
                    ShopBox:
                        Label:
                            id: crystal_shop
                            text: 'crystal_shop'
                            color: (0, 0, 0, 1)
                ShopBox:
                    size_hint_x: .3
                    padding: 5
                    CharacterShop:
                        id: character
        ShopBox:
            size_hint_y: .58
            GridLayout:
                id: skills
                cols: 3
                padding: 10
                spacing: 20
        ShopBox:
            size_hint_y: .06
            Button:
                text: 'Close'
                color: (0, 0, 0, 1)
                background_normal: 'images/shop/shop_background.png'
                background_down: 'images/shop/shop_background.png'
                on_release: root.dismiss()


<CharacterShop>:
    on_press: root.open_character_changer()
    border: [0, 0, 0 ,0]

<CharacterChangerShop>:
    size_hint_y: WINDOW.width / WINDOW.height / 3
    size_hint_x: .8
    background: ''
    canvas:
        Color:
            rgba: (.30, .12, .03, 1)
        Rectangle:
            size: self.size
            pos: self.pos
    GridLayout:
        id: character_selection
        cols: 3
        spacing: WINDOW.width / 60
        padding: WINDOW.width / 60

<ShopBox@BoxLayout>:
    canvas.before:
        Color:
            rgba: (.95, .87, .75, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos

<SkillShop>:
    border: [0, 0, 0, 0]
    background_down: self.background_normal
    background_color: (0, 0, 0, 1)
    on_press: self.open_deal()
    canvas.before:
        Color:
            rgba: (.88, .72, .31, 1)
        RoundedRectangle:
            size: self.size[0] * 1.2, self.size[1] * 1.2
            pos: self.pos[0] - self.size[0] * .1, self.pos[1] - self.size[1] * .1
            radius: [self.height / 5,]

<SkillBoxShop>:
    size_hint: None, None
    width: WINDOW.width * .8 / 3 - 40
    height: WINDOW.width * .8 / 3 - 40
    RelativeLayout:
        SkillShop:
            id: skill
            quantity: 0
        Label:
            id: quantity
            text: str(skill.quantity)
            size_hint: None, None
            size: self.texture_size
            x: skill.x - self.width / 2
            y: skill.y - self.height / 2
            color: (1, 1, 1, 1)
            canvas.before:
                Color:
                    rgba: (.49, .42, .88, 1)
                Ellipse:
                    pos: self.center_x - self.height / 2, self.y
                    size: self.height, self.height

<Deal>:
    size_hint: .8, .6
    BoxLayout:
        orientation: 'vertical'
        GridLayout:
            size_hint_y: .9
            padding: 10
            spacing: 20
            cols: 3
            ShopBox:
                DealButton:
                    text: '1' if self.state == 'normal' else 'Done!'
                    on_release: root.make_dial(1)
            ShopBox:
                DealButton:
                    text: '3' if self.state == 'normal' else 'Done!'
                    on_release: root.make_dial(3)
            ShopBox:
                DealButton:
                    text: '5' if self.state == 'normal' else 'Done!'
                    on_release: root.make_dial(5)
            ShopBox:
                DealButton:
                    text: '10' if self.state == 'normal' else 'Done!'
                    on_release: root.make_dial(10)
            ShopBox:
                DealButton:
                    text: '30' if self.state == 'normal' else 'Done!'
                    on_release: root.make_dial(30)
            ShopBox:
                DealButton:
                    text: '100' if self.state == 'normal' else 'Done!'
                    on_release: root.make_dial(100)
        ShopBox:
            size_hint_y: .1
            DealButton:
                text: 'Close'
                on_release: root.dismiss()


<DealButton@Button>:
    color: (0, 0, 0, 1)
    background_normal: 'images/shop/shop_background.png'
    background_down: 'images/shop/shop_background.png'